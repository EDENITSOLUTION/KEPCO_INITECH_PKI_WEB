/*
 * JSP generated by Resin Professional 4.0.38 (built Tue, 17 Dec 2013 09:49:45 PST)
 */

package _jsp;
import javax.servlet.*;
import javax.servlet.jsp.*;
import javax.servlet.http.*;
import java.io.*;
import java.net.*;
import java.util.*;
import java.util.Date.*;
import java.text.SimpleDateFormat;
import java.io.BufferedReader.*;
import java.io.BufferedWriter.*;
import java.io.InputStream.*;
import java.io.InputStreamReader.*;
import java.io.OutputStream.*;
import java.io.OutputStreamWriter.*;
import java.net.Socket.*;

public class _test__jsp extends com.caucho.jsp.JavaPage
{
  private static final java.util.HashMap<String,java.lang.reflect.Method> _jsp_functionMap = new java.util.HashMap<String,java.lang.reflect.Method>();
  private boolean _caucho_isDead;
  private boolean _caucho_isNotModified;
  private com.caucho.jsp.PageManager _jsp_pageManager;

  
  public String en(String ko){
  	        /**/
  	        String new_str = null;
  	        try{        
  	                new_str  = new String(ko.getBytes("KSC5601"), "8859_1");
  	        } catch(UnsupportedEncodingException ex) {ex.printStackTrace(); }
  	        return new_str;
  	        /**/
  	        //return ko;
  }
  
  public String ko(String en){
      /**/
      String new_str = null;
      try{              
          try{
                  new_str  = new String(en.getBytes("8859_1"), "KSC5601");                
          } catch(UnsupportedEncodingException ex) {ex.printStackTrace(); }
      }catch(NullPointerException e)
  	{	System.out.println("Null  " + en);
  		new_str = en;
  	}
      return new_str;
      /**/
      //return en;
  }
  public String SendSMS(String SENDIP, int SENDPORT, String SEND_MSG)  {
  		
  		Socket socket = null;		
  		OutputStream os = null;
  		OutputStreamWriter osw = null;
  		BufferedWriter bw = null;
    
  		InputStream is = null;;
  		InputStreamReader isr = null;;
  		BufferedReader br = null;
  		
  		String reseive_data = "2000";
  
  		try{
  
  
  			System.out.println("\ubcf4\ub0b4\ub294 \ub370\uc774\ud130: "+ SEND_MSG );
  	
  			socket = new Socket(SENDIP, SENDPORT); 
  			socket.setSoTimeout (600000); //Timeout : 60secs
  			System.out.println("socket ==== "+socket.isConnected());
  
  			os = socket.getOutputStream();
  			osw = new OutputStreamWriter(os);
  			bw = new BufferedWriter(osw); //\uc11c\ubc84\ub85c \uc804\uc1a1\uc744 \uc704\ud55c \ucd9c\ub825\uc2a4\ud2b8\ub9bc \uc120\uc5b8.
     
  			is = socket.getInputStream();
  			isr = new InputStreamReader(is);
  			br = new BufferedReader(isr); //\uc11c\ubc84\ub85c \ubd80\ud130 \ub370\uc774\ud130\ub97c \ubc1b\uae30\uc704\ud55c \uc785\ub825\uc2a4\ud2b8\ub9bc\uc120\uc5b8.
     
  			bw.write(SEND_MSG); //\uc11c\ubc84\ub85c\ubd80\ud130 \ub370\uc774\ud130\ub97c \uc804\uc1a1.
  			bw.newLine();
  			bw.flush();
     
  
  			reseive_data = br.readLine(); //\uc11c\ubc84\ub85c\ubd80\ud130 \ub370\uc774\ud130 \ubc1b\uc544 \ud55c\uc904 \uc77d\uc5b4\uc628\ub2e4. 
  			
  			
     
  			System.out.println("Server\ub85c \ubd80\ud130 \ub9ac\ud134\ubc1b\uc740 \ub370\uc774\ud130: "+ reseive_data );
     
  			return reseive_data ;
  		}
  		catch(Exception e ){
  			e.printStackTrace();
  			return "2000" ;
  		}
  		finally {
  			try {
  				bw.close();
  				osw.close();
  				os.close();
  				br.close();
  				isr.close();
  				is.close();
  				socket.close();
  			} catch (Exception e) {
  				e.printStackTrace();
  			}
  		}
  	 }

  
  public void
  _jspService(javax.servlet.http.HttpServletRequest request,
              javax.servlet.http.HttpServletResponse response)
    throws java.io.IOException, javax.servlet.ServletException
  {
    javax.servlet.http.HttpSession session = request.getSession(true);
    com.caucho.server.webapp.WebApp _jsp_application = _caucho_getApplication();
    com.caucho.jsp.PageContextImpl pageContext = _jsp_pageManager.allocatePageContext(this, _jsp_application, request, response, null, session, 8192, true, false);

    TagState _jsp_state = null;

    try {
      _jspService(request, response, pageContext, _jsp_application, session, _jsp_state);
    } catch (java.lang.Throwable _jsp_e) {
      pageContext.handlePageException(_jsp_e);
    } finally {
      _jsp_pageManager.freePageContext(pageContext);
    }
  }
  
  private void
  _jspService(javax.servlet.http.HttpServletRequest request,
              javax.servlet.http.HttpServletResponse response,
              com.caucho.jsp.PageContextImpl pageContext,
              javax.servlet.ServletContext application,
              javax.servlet.http.HttpSession session,
              TagState _jsp_state)
    throws Throwable
  {
    javax.servlet.jsp.JspWriter out = pageContext.getOut();
    final javax.el.ELContext _jsp_env = pageContext.getELContext();
    javax.servlet.ServletConfig config = getServletConfig();
    javax.servlet.Servlet page = this;
    javax.servlet.jsp.tagext.JspTag _jsp_parent_tag = null;
    com.caucho.jsp.PageContextImpl _jsp_parentContext = pageContext;
    response.setContentType("text/html;charset=EUC-KR");

    out.write(_jsp_string0, 0, _jsp_string0.length);
    

//java getBytes encoding \ubcc0\ud658
//new String(s1.getBytes("EUC_KR"),"8859_1"); 


String SENDIP = "203.248.44.150";
int SENDPORT = 7904;
String CLASSCODE = "IDMKL" ;
String PASSWORD = " DIST";
String KEY = "000000000000001";
String KEY1 = "000000000000001";
String KEY2 = "000000000000001";
String RECVPHONE = "01099117557";
String CALLBACK = "0234561166";
String MESSAGE = "KEPCO-SSO \uc778\uc99d\uc11c\ubc1c\uae09\uc6a9 : \uc778\uc99d\ubc88\ud638 [000000]\uc744(\ub97c) \uc785\ub825\ud558\uc2ed\uc2dc\uc624";
String EMPNO = "jekyung";
String REFCNT = "00001";


Locale locale = java.util.Locale.KOREA;
SimpleDateFormat sdfr = new SimpleDateFormat("yyyyMMddHHmmss", locale);
String convertedTime = sdfr.format(new Date());


KEY1 = convertedTime + "1";
KEY2 = convertedTime + "2";


//MESSAGE = new String(MESSAGE.getBytes("KSC5601"), "UTF-8");


String SEND_MSG = CLASSCODE + " " + PASSWORD + " " + KEY + " " + RECVPHONE + " " + CALLBACK + " " + MESSAGE + " " + EMPNO + " " + REFCNT ;


////////////////////////////////////////////////////
//  \uc218\uc2e0 \ucf54\ub4dc ///////////////////////////////////
String RETURNCODE = null ;
////////////////////////////////////////////////////
//1. 9999 : \uc131\uacf5(\uba54\uc138\uc9c0 \uc815\uc0c1 \ucc98\ub9ac)
//2. 1000 : SMS \ud504\ub85c\uc138\uc2a4 \uc624\ub958(SMS \ub370\ubaac \ud504\ub85c\uc138\uc2a4\uac00 \uc815\uc9c0\ub410\uc744 \uacbd\uc6b0)
//3. 1001 : \uc804\uc1a1 \ub370\uc774\ud130\ud615\uc2dd \uc624\ub958(\uc804\uc1a1 \ub370\uc774\ud130\ud615\uc2dd\uc774 \uaddc\uc815\uc5d0 \ub9de\uc9c0 \uc54a\uc744 \uacbd\uc6b0)
//4. 1002 : \uc11c\ubc84\uac04 \uc804\uc1a1\uc2dc\uac04 \ucd08\uacfc \uc624\ub958(\uc11c\ubc84\uac04 \uc5f0\uacb0 \ud6c4 \uc77c\uc815\uc2dc\uac04\ub3d9\uc548 \ub370\uc774\ud130 \uc1a1\uc218\uc2e0\uc774 \uc774\ub8e8\uc5b4\uc9c0\uc9c0 \uc54a\uc744 \uacbd\uc6b0)
//5. 1100 : \ub370\uc774\ud130\ubca0\uc774\uc2a4 \uc811\uc18d \uc624\ub958(\ub370\uc774\ud130\ubca0\uc774\uc2a4\uac00 \uc815\uc9c0\ub418\uc5c8\uac00\ub098 \ub3d9\uc2dc \uc811\uc18d\uc774 \ub9ce\uc744 \uacbd\uc6b0)
//6. 1101 : \ub370\uc774\ud130\ubca0\uc774\uc2a4 Query \uc624\ub958(\ub370\uc774\ud130\ubca0\uc774\uc2a4 Query \ubc0f \ub370\uc774\ud130 \ud615\uc2dd\uc5d0 \ub9de\uac8c \uc218\uc2e0\ud55c \ud6c4 \ub370\uc774\ud130\ubca0\uc774\uc2a4 \uac80\uc0c9\uc2dc \uc798\ubabb\ub41c \uacbd\uc6b0);
//7. 1200 : \uc0ac\uc5c5\uc18c \uc11c\ube44\uc2a4 \uc624\ub958 (\uc0ac\uc5c5\uc18c \ucf54\ub4dc\uac00 \uc798\ubabb\ub41c \uacbd\uc6b0)
//8. 2000 : \ubcf4\ub0b4\ub294\ucabd \uc18c\ucf13\ud1b5\uc2e0 \uc624\ub958


//SMS\ubc1c\uc1a1\uc744 \uc704\ud55c \ud074\ub77c\uc774\uc5b8\ud2b8 \uac1d\uccb4 \uc0dd\uc131
//SmsClient sms = new SmsClient();
RETURNCODE = SendSMS(SENDIP,SENDPORT,SEND_MSG);


    out.write(_jsp_string1, 0, _jsp_string1.length);
    out.print((RETURNCODE));
    out.write(_jsp_string2, 0, _jsp_string2.length);
    out.print((SEND_MSG ));
    out.write(_jsp_string3, 0, _jsp_string3.length);
    out.print((KEY1 ));
    out.write(_jsp_string3, 0, _jsp_string3.length);
    out.print((KEY2 ));
    out.write(_jsp_string4, 0, _jsp_string4.length);
  }

  private com.caucho.make.DependencyContainer _caucho_depends
    = new com.caucho.make.DependencyContainer();

  public java.util.ArrayList<com.caucho.vfs.Dependency> _caucho_getDependList()
  {
    return _caucho_depends.getDependencies();
  }

  public void _caucho_addDepend(com.caucho.vfs.PersistentDependency depend)
  {
    super._caucho_addDepend(depend);
    _caucho_depends.add(depend);
  }

  protected void _caucho_setNeverModified(boolean isNotModified)
  {
    _caucho_isNotModified = true;
  }

  public boolean _caucho_isModified()
  {
    if (_caucho_isDead)
      return true;

    if (_caucho_isNotModified)
      return false;

    if (com.caucho.server.util.CauchoSystem.getVersionId() != -1257324557874484737L)
      return true;

    return _caucho_depends.isModified();
  }

  public long _caucho_lastModified()
  {
    return 0;
  }

  public void destroy()
  {
      _caucho_isDead = true;
      super.destroy();
    TagState tagState;
  }

  public void init(com.caucho.vfs.Path appDir)
    throws javax.servlet.ServletException
  {
    com.caucho.vfs.Path resinHome = com.caucho.server.util.CauchoSystem.getResinHome();
    com.caucho.vfs.MergePath mergePath = new com.caucho.vfs.MergePath();
    mergePath.addMergePath(appDir);
    mergePath.addMergePath(resinHome);
    com.caucho.loader.DynamicClassLoader loader;
    loader = (com.caucho.loader.DynamicClassLoader) getClass().getClassLoader();
    String resourcePath = loader.getResourcePathSpecificFirst();
    mergePath.addClassPath(resourcePath);
    com.caucho.vfs.Depend depend;
    depend = new com.caucho.vfs.Depend(appDir.lookup("test.jsp"), -3265012936660211503L, true);
    _caucho_depends.add(depend);
  }

  final static class TagState {

    void release()
    {
    }
  }

  public java.util.HashMap<String,java.lang.reflect.Method> _caucho_getFunctionMap()
  {
    return _jsp_functionMap;
  }

  public void caucho_init(ServletConfig config)
  {
    try {
      com.caucho.server.webapp.WebApp webApp
        = (com.caucho.server.webapp.WebApp) config.getServletContext();
      init(config);
      if (com.caucho.jsp.JspManager.getCheckInterval() >= 0)
        _caucho_depends.setCheckInterval(com.caucho.jsp.JspManager.getCheckInterval());
      _jsp_pageManager = webApp.getJspApplicationContext().getPageManager();
      com.caucho.jsp.TaglibManager manager = webApp.getJspApplicationContext().getTaglibManager();
      com.caucho.jsp.PageContextImpl pageContext = new com.caucho.jsp.InitPageContextImpl(webApp, this);
    } catch (Exception e) {
      throw com.caucho.config.ConfigException.create(e);
    }
  }

  private final static char []_jsp_string1;
  private final static char []_jsp_string4;
  private final static char []_jsp_string0;
  private final static char []_jsp_string2;
  private final static char []_jsp_string3;
  static {
    _jsp_string1 = "\r\n-".toCharArray();
    _jsp_string4 = "\r\n</body>\r\n</html>".toCharArray();
    _jsp_string0 = "<?xml version=\"1.0\" encoding=\"EUC-KR\" ?>\r\n\r\n    \r\n	\r\n    \r\n    \r\n    \r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\r\n<html xmlns=\"http://www.w3.org/1999/xhtml\">\r\n<head>\r\n<meta http-equiv=\"Content-Type\" content=\"text/html; charset=EUC-KR\" />\r\n<title>Insert title here</title>\r\n</head>\r\n<body>\r\n".toCharArray();
    _jsp_string2 = "-<br />\r\n".toCharArray();
    _jsp_string3 = "<br />\r\n".toCharArray();
  }
}
