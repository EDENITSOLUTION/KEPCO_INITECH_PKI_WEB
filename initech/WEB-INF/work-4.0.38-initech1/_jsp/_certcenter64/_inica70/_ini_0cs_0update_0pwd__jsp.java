/*
 * JSP generated by Resin Professional 4.0.38 (built Tue, 17 Dec 2013 09:49:45 PST)
 */

package _jsp._certcenter64._inica70;
import javax.servlet.*;
import javax.servlet.jsp.*;
import javax.servlet.http.*;
import java.io.*;
import java.util.*;
import java.lang.*;
import java.net.*;
import java.security.MessageDigest;
import java.security.NoSuchAlgorithmException;
import java.security.cert.X509Certificate;
import com.initech.iniplugin.*;

public class _ini_0cs_0update_0pwd__jsp extends com.caucho.jsp.JavaPage
{
  private static final java.util.HashMap<String,java.lang.reflect.Method> _jsp_functionMap = new java.util.HashMap<String,java.lang.reflect.Method>();
  private boolean _caucho_isDead;
  private boolean _caucho_isNotModified;
  private com.caucho.jsp.PageManager _jsp_pageManager;


  public byte[] getHashValue(String inputString)     {
  	MessageDigest md = null;
  	
  	try {
  		md = MessageDigest.getInstance("MD5");
  		
  		md.update(inputString.getBytes());
  		
  	} catch (NoSuchAlgorithmException e) {
  		// TODO \uc790\ub3d9 \uc0dd\uc131\ub41c catch \ube14\ub85d
  		e.printStackTrace();
  	}
  	
  	return md.digest(); 
  }

  public String getBase64Data(byte[] inputByte) throws IOException
  {
  	String returnString = "";
  	returnString = new String(com.initech.util.Base64Util.encode(inputByte, false));

  	return returnString;
  }


  
  public void
  _jspService(javax.servlet.http.HttpServletRequest request,
              javax.servlet.http.HttpServletResponse response)
    throws java.io.IOException, javax.servlet.ServletException
  {
    javax.servlet.http.HttpSession session = request.getSession(true);
    com.caucho.server.webapp.WebApp _jsp_application = _caucho_getApplication();
    com.caucho.jsp.PageContextImpl pageContext = _jsp_pageManager.allocatePageContext(this, _jsp_application, request, response, null, session, 8192, true, false);

    TagState _jsp_state = null;

    try {
      _jspService(request, response, pageContext, _jsp_application, session, _jsp_state);
    } catch (java.lang.Throwable _jsp_e) {
      pageContext.handlePageException(_jsp_e);
    } finally {
      _jsp_pageManager.freePageContext(pageContext);
    }
  }
  
  private void
  _jspService(javax.servlet.http.HttpServletRequest request,
              javax.servlet.http.HttpServletResponse response,
              com.caucho.jsp.PageContextImpl pageContext,
              javax.servlet.ServletContext application,
              javax.servlet.http.HttpSession session,
              TagState _jsp_state)
    throws Throwable
  {
    javax.servlet.jsp.JspWriter out = pageContext.getOut();
    final javax.el.ELContext _jsp_env = pageContext.getELContext();
    javax.servlet.ServletConfig config = getServletConfig();
    javax.servlet.Servlet page = this;
    javax.servlet.jsp.tagext.JspTag _jsp_parent_tag = null;
    com.caucho.jsp.PageContextImpl _jsp_parentContext = pageContext;
    response.setContentType("text/html;charset=EUC-KR");

    out.write(_jsp_string0, 0, _jsp_string0.length);
    
//2014.04.22 com.initech.IniRA.* \uc81c\uac70
//--@ page import="com.initech.IniRA.*" 

boolean is_smsChk = true;

String pwdSynURL = "http://mail.kepco.co.kr/Synk/Password.ashx";
String pwdSyncKey = "5ac1bb6d4172409089a7df3aa6ec91c2";
String pwdSyncDidx = "1";


boolean m_bDebug = true;
String m_How = null;

String m_IniErrCode = null;
String m_IniErrMsg = null;
IniPlugin m_IP = new IniPlugin(request, response, "/home/initech/iniplugin/properties/IniPlugin.inica70.properties");

//************************************************
//      Post Data \ud655\uc778
//************************************************
String INIdata = request.getParameter("INIpluginData");
if (INIdata == null)
{
	m_IniErrCode = "iniPlugin_101";
	m_IniErrMsg = "Exception : INIpluginData is null";
	System.out.println(m_IniErrMsg);
	//IniDebug.request(request);
}

if (m_IniErrCode == null) 
{
	try {
		m_IP.init();
	} catch(PrivateKeyDecryptException e) {
		m_IniErrCode = "PLUGIN_001";
		m_IniErrMsg = "Exception : " + e.getMessage();

	} catch(CRLFileNotFoundException e) {
		m_IniErrCode = "PLUGIN_002";
		m_IniErrMsg = "Exception : " + e.getMessage();
	} catch(PropertyFileNotFoundException e) {
		m_IniErrCode = "PLUGIN_003";
		m_IniErrMsg = "Exception : " + e.getMessage();
	} catch(PrivateKeyFileNotFoundException e) {
		m_IniErrCode = "PLUGIN_004";
		m_IniErrMsg = "Exception : " + e.getMessage();
	} catch(CACertFileNotFoundException e) {
		m_IniErrCode = "PLUGIN_005";
		m_IniErrMsg = "Exception : " + e.getMessage();
	} catch(INIpluginDataAbnormalFormatException e) {
		m_IniErrCode = "PLUGIN_006";
		m_IniErrMsg = "Exception : " + e.getMessage();
	} catch(LongParseException e) {
		m_IniErrCode = "PLUGIN_007";
		m_IniErrMsg = "Exception : " + e.getMessage();
	} catch(PrivateKeyParseException e) {
		m_IniErrCode = "PLUGIN_008";
		m_IniErrMsg = "Exception : " + e.getMessage();
	} catch(CRLFileParseException e) {
		m_IniErrCode = "PLUGIN_009";
		m_IniErrMsg = "Exception : " + e.getMessage();
	} catch(CACertFileParseException e) {
		m_IniErrCode = "PLUGIN_010";
		m_IniErrMsg = "Exception : " + e.getMessage();
	} catch(ClientCertParseException e) {
		m_IniErrCode = "PLUGIN_011";
		m_IniErrMsg = "Exception : " + e.getMessage();
	} catch(AbnormalPropertyFileException e) {
		m_IniErrCode = "PLUGIN_012";
		m_IniErrMsg = "Exception : " + e.getMessage();
	} catch(PropertyNotFoundException e) {
		m_IniErrCode = "PLUGIN_013";
		m_IniErrMsg = "Exception : " + e.getMessage();
	} catch(VerifyDataDecryptException e) {
		m_IniErrCode = "PLUGIN_014";
		m_IniErrMsg = "Exception : " + e.getMessage();
	} catch(AbnormalVerifyDataException e) {
		m_IniErrCode = "PLUGIN_015";
		m_IniErrMsg = "Exception : " + e.getMessage();
	} catch(ExpiredVerifyDataException e) {
		m_IniErrCode = "PLUGIN_016";
		m_IniErrMsg = "Exception : " + e.getMessage();
	} catch(ClientCertValidityException e) {
		m_IniErrCode = "PLUGIN_017";
		m_IniErrMsg = "Exception : " + e.getMessage();
	} catch(SignatureVerifyException e) {
		m_IniErrCode = "PLUGIN_018";
		m_IniErrMsg = "Exception : " + e.getMessage();
	} catch(ClientCertRevokedException e) {
		m_IniErrCode = "PLUGIN_019";
		m_IniErrMsg = "Exception : " + e.getMessage();
	} catch(SessionKeyException e) {
		m_IniErrCode = "PLUGIN_020";
		m_IniErrMsg = "Exception : " + e.getMessage();
	} catch(EncryptDataException e) {
		m_IniErrCode = "PLUGIN_021";
		m_IniErrMsg = "Exception : " + e.getMessage();
	} catch(DecryptDataException e) {
		m_IniErrCode = "PLUGIN_022";
		m_IniErrMsg = "Exception : " + e.getMessage();
	} catch(CRLFileIOException e) {
		m_IniErrCode = "PLUGIN_023";
		m_IniErrMsg = "Exception : " + e.getMessage();
	} catch(PropertyFileIOException e) {
		m_IniErrCode = "PLUGIN_024";
		m_IniErrMsg = "Exception : " + e.getMessage();
	} catch(PrivateKeyFileIOException e) {
		m_IniErrCode = "PLUGIN_025";
		m_IniErrMsg = "Exception : " + e.getMessage();
	} catch(CACertFileIOException e) {
		m_IniErrCode = "PLUGIN_026";
		m_IniErrMsg = "Exception : " + e.getMessage();
	} catch(PropertyFileParseException e) {
		m_IniErrCode = "PLUGIN_027";
		m_IniErrMsg = "Exception : " + e.getMessage();
	} catch(VerifyFlagException e) {
		m_IniErrCode = "PLUGIN_028";
		m_IniErrMsg = "Exception : " + e.getMessage();
	} catch(IOException e) {
		m_IniErrCode = "PLUGIN_029";
		m_IniErrMsg = "Exception : " + e.getMessage();
	} catch(SignDataException e) {
		m_IniErrCode = "PLUGIN_030";
		m_IniErrMsg = "Exception : " + e.getMessage();
	} catch(Exception e) {
		m_IniErrCode = "PLUGIN_099";
		m_IniErrMsg = "Exception : " + e.getMessage();
		e.printStackTrace();
	}

	//if (m_IniErrCode != null) IniDebug.request(request);
}

    out.write(_jsp_string1, 0, _jsp_string1.length);
    
//String syncID = m_IP.getParameter("id");
//String syncPWD = m_IP.getParameter("pw");
//String syncKey = m_IP.getParameter("syncKey");
String syncID = request.getParameter("id");
String syncIncPwd = request.getParameter("pw");
String syncPWD =  java.net.URLDecoder.decode(syncIncPwd, "EUC_KR");
String syncKey = request.getParameter("syncKey");
String syncEncPWD = getBase64Data(getHashValue(syncPWD));

String result_code = "1" ; //\uc131\uacf5 1, \uc2e4\ud328 0

if (syncID == null || syncID.equals("")) {
	result_code = "0";
}
if (syncPWD == null || syncPWD.equals("")) {
	result_code = "0";
}
if (syncKey == null || syncKey.equals("")) {
	result_code = "0";
}
if (syncKey.equals(pwdSyncKey)) {
	result_code = "1";
}else{
	result_code = "0";
}

if (result_code.equals("0")) { 
	out.println("result_code=0");
} else {

    out.write(_jsp_string2, 0, _jsp_string2.length);
    out.print((syncID));
    out.write(_jsp_string3, 0, _jsp_string3.length);
    out.print((syncIncPwd));
    out.write(_jsp_string4, 0, _jsp_string4.length);
    out.print((syncPWD));
    out.write(_jsp_string5, 0, _jsp_string5.length);
    out.print((syncKey));
    out.write(_jsp_string6, 0, _jsp_string6.length);
    out.print((syncEncPWD));
    out.write(_jsp_string7, 0, _jsp_string7.length);
    out.print((pwdSynURL));
    out.write(_jsp_string8, 0, _jsp_string8.length);
    out.print((pwdSyncKey));
    out.write(_jsp_string9, 0, _jsp_string9.length);
    out.print((pwdSyncDidx));
    out.write(_jsp_string10, 0, _jsp_string10.length);
    out.print((syncID));
    out.write(_jsp_string11, 0, _jsp_string11.length);
    out.print((syncEncPWD));
    out.write(_jsp_string12, 0, _jsp_string12.length);
    
}

    out.write('\n');
    
// VPN \uc0ac\uc6a9\uc790 \ud328\uc2a4\uc6cc\ub4dc \uc5c5\ub370\uc774\ud2b8 \ub0b4\uc6a9
     URL url;//URL \uc8fc\uc18c \uac1d\uccb4
        URLConnection connection;//URL\uc811\uc18d\uc744 \uac00\uc9c0\ub294 \uac1d\uccb4
        InputStream is;//URL\uc811\uc18d\uc5d0\uc11c \ub0b4\uc6a9\uc744 \uc77d\uae30\uc704\ud55c Stream
        InputStreamReader isr;
        BufferedReader br;

        try{
            //URL\uac1d\uccb4\ub97c \uc0dd\uc131\ud558\uace0 \ud574\ub2f9 URL\ub85c \uc811\uc18d\ud55c\ub2e4..
            url = new URL("http://10.180.6.97:8080/SSL/EMPLOYEE2/epi_relay.php?id="+syncID+"&pw="+syncEncPWD);
            connection = url.openConnection();

            //\ub0b4\uc6a9\uc744 \uc77d\uc5b4\uc624\uae30\uc704\ud55c InputStream\uac1d\uccb4\ub97c \uc0dd\uc131\ud55c\ub2e4..
            is = connection.getInputStream();
            isr = new InputStreamReader(is);
            br = new BufferedReader(isr);

            //\ub0b4\uc6a9\uc744 \uc77d\uc5b4\uc11c \ud654\uba74\uc5d0 \ucd9c\ub825\ud55c\ub2e4..
            String buf = null;
            while(true){
                buf = br.readLine();
                if(buf == null) break;
                System.out.println(buf);
            }
        }catch(MalformedURLException mue){
            System.err.println("\uc798\ubabb\ub418 URL\uc785\ub2c8\ub2e4. \uc0ac\uc6a9\ubc95 : java URLConn http://hostname/path]");
            System.exit(1);
        }catch(IOException ioe){
            System.err.println("IOException " + ioe);
            ioe.printStackTrace();
            System.exit(1);
        }

    out.write(_jsp_string13, 0, _jsp_string13.length);
  }

  private com.caucho.make.DependencyContainer _caucho_depends
    = new com.caucho.make.DependencyContainer();

  public java.util.ArrayList<com.caucho.vfs.Dependency> _caucho_getDependList()
  {
    return _caucho_depends.getDependencies();
  }

  public void _caucho_addDepend(com.caucho.vfs.PersistentDependency depend)
  {
    super._caucho_addDepend(depend);
    _caucho_depends.add(depend);
  }

  protected void _caucho_setNeverModified(boolean isNotModified)
  {
    _caucho_isNotModified = true;
  }

  public boolean _caucho_isModified()
  {
    if (_caucho_isDead)
      return true;

    if (_caucho_isNotModified)
      return false;

    if (com.caucho.server.util.CauchoSystem.getVersionId() != -1257324557874484737L)
      return true;

    return _caucho_depends.isModified();
  }

  public long _caucho_lastModified()
  {
    return 0;
  }

  public void destroy()
  {
      _caucho_isDead = true;
      super.destroy();
    TagState tagState;
  }

  public void init(com.caucho.vfs.Path appDir)
    throws javax.servlet.ServletException
  {
    com.caucho.vfs.Path resinHome = com.caucho.server.util.CauchoSystem.getResinHome();
    com.caucho.vfs.MergePath mergePath = new com.caucho.vfs.MergePath();
    mergePath.addMergePath(appDir);
    mergePath.addMergePath(resinHome);
    com.caucho.loader.DynamicClassLoader loader;
    loader = (com.caucho.loader.DynamicClassLoader) getClass().getClassLoader();
    String resourcePath = loader.getResourcePathSpecificFirst();
    mergePath.addClassPath(resourcePath);
    com.caucho.vfs.Depend depend;
    depend = new com.caucho.vfs.Depend(appDir.lookup("certcenter64/inica70/ini_cs_update_pwd.jsp"), -3386861910863193097L, true);
    _caucho_depends.add(depend);
    depend = new com.caucho.vfs.Depend(appDir.lookup("certcenter64/inica70/import/iniplugin_init.jsp"), -8960418715910081368L, true);
    _caucho_depends.add(depend);
  }

  final static class TagState {

    void release()
    {
    }
  }

  public java.util.HashMap<String,java.lang.reflect.Method> _caucho_getFunctionMap()
  {
    return _jsp_functionMap;
  }

  public void caucho_init(ServletConfig config)
  {
    try {
      com.caucho.server.webapp.WebApp webApp
        = (com.caucho.server.webapp.WebApp) config.getServletContext();
      init(config);
      if (com.caucho.jsp.JspManager.getCheckInterval() >= 0)
        _caucho_depends.setCheckInterval(com.caucho.jsp.JspManager.getCheckInterval());
      _jsp_pageManager = webApp.getJspApplicationContext().getPageManager();
      com.caucho.jsp.TaglibManager manager = webApp.getJspApplicationContext().getTaglibManager();
      com.caucho.jsp.PageContextImpl pageContext = new com.caucho.jsp.InitPageContextImpl(webApp, this);
    } catch (Exception e) {
      throw com.caucho.config.ConfigException.create(e);
    }
  }

  private final static char []_jsp_string2;
  private final static char []_jsp_string10;
  private final static char []_jsp_string8;
  private final static char []_jsp_string13;
  private final static char []_jsp_string6;
  private final static char []_jsp_string3;
  private final static char []_jsp_string7;
  private final static char []_jsp_string0;
  private final static char []_jsp_string9;
  private final static char []_jsp_string1;
  private final static char []_jsp_string12;
  private final static char []_jsp_string5;
  private final static char []_jsp_string11;
  private final static char []_jsp_string4;
  static {
    _jsp_string2 = "\n\n<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\n<html xmlns=\"http://www.w3.org/1999/xhtml\">\n<head>\n<meta http-equiv=\"Content-Type\" content=\"text/html; charset=euc-kr\" />\n<title>\uc778\uc99d\uc13c\ud130 \uc774\uc6a9\uc548\ub0b4</title>\n</head>\n<body>\n<!-- String syncID = ".toCharArray();
    _jsp_string10 = "&usb=".toCharArray();
    _jsp_string8 = "?key=".toCharArray();
    _jsp_string13 = "\n\n\n".toCharArray();
    _jsp_string6 = "<br>\nString syncEncPWD = ".toCharArray();
    _jsp_string3 = "<br>\nString syncIncPwd = ".toCharArray();
    _jsp_string7 = "<br>\n -->\n\n\n<iframe name=\"hdnFrame\" id=\"hdnFrame\" src=\"".toCharArray();
    _jsp_string0 = "\n\n\n\n\n\n\n\n".toCharArray();
    _jsp_string9 = "&didx=".toCharArray();
    _jsp_string1 = "\n\n".toCharArray();
    _jsp_string12 = "\" width=\"200\" height=\"200\" style=\"display:none\" scrolling=\"no\" frameborder=\"0\"></iframe>\n</body>\n</html>\n".toCharArray();
    _jsp_string5 = "<br>\nString syncKey = ".toCharArray();
    _jsp_string11 = "&pwd=".toCharArray();
    _jsp_string4 = "<br>\nString syncPWD = ".toCharArray();
  }
}
