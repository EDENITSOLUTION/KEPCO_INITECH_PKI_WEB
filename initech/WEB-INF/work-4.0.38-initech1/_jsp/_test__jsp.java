/*
 * JSP generated by Resin Professional 4.0.38 (built Tue, 17 Dec 2013 09:49:45 PST)
 */

package _jsp;
import javax.servlet.*;
import javax.servlet.jsp.*;
import javax.servlet.http.*;
import java.io.*;
import java.sql.*;
import javax.sql.*;
import javax.naming.*;
import java.security.MessageDigest;
import java.security.NoSuchAlgorithmException;

public class _test__jsp extends com.caucho.jsp.JavaPage
{
  private static final java.util.HashMap<String,java.lang.reflect.Method> _jsp_functionMap = new java.util.HashMap<String,java.lang.reflect.Method>();
  private boolean _caucho_isDead;
  private boolean _caucho_isNotModified;
  private com.caucho.jsp.PageManager _jsp_pageManager;
  
  public void
  _jspService(javax.servlet.http.HttpServletRequest request,
              javax.servlet.http.HttpServletResponse response)
    throws java.io.IOException, javax.servlet.ServletException
  {
    javax.servlet.http.HttpSession session = request.getSession(true);
    com.caucho.server.webapp.WebApp _jsp_application = _caucho_getApplication();
    com.caucho.jsp.PageContextImpl pageContext = _jsp_pageManager.allocatePageContext(this, _jsp_application, request, response, null, session, 8192, true, false);

    TagState _jsp_state = null;

    try {
      _jspService(request, response, pageContext, _jsp_application, session, _jsp_state);
    } catch (java.lang.Throwable _jsp_e) {
      pageContext.handlePageException(_jsp_e);
    } finally {
      _jsp_pageManager.freePageContext(pageContext);
    }
  }
  
  private void
  _jspService(javax.servlet.http.HttpServletRequest request,
              javax.servlet.http.HttpServletResponse response,
              com.caucho.jsp.PageContextImpl pageContext,
              javax.servlet.ServletContext application,
              javax.servlet.http.HttpSession session,
              TagState _jsp_state)
    throws Throwable
  {
    javax.servlet.jsp.JspWriter out = pageContext.getOut();
    final javax.el.ELContext _jsp_env = pageContext.getELContext();
    javax.servlet.ServletConfig config = getServletConfig();
    javax.servlet.Servlet page = this;
    javax.servlet.jsp.tagext.JspTag _jsp_parent_tag = null;
    com.caucho.jsp.PageContextImpl _jsp_parentContext = pageContext;
    response.setContentType("text/html;charset=EUC-KR");

    out.write(_jsp_string0, 0, _jsp_string0.length);
     


//20140709142401_ex099129_10.180.4.110
boolean is_smsChk = true ;
String m_How = "certNew";
String m_ID = "ex099129";
String m_smschk = null; //\ubc1c\uae09SMS\uc778\uc99d\ucf54\ub4dc
String m_sms = "977057"; //\uc785\ub825SMS\uc778\uc99d\ucf54\ub4dc
String m_tmid = "20140709165947";//SMS\uc778\uc99d\uc744 \uc704\ud55c \ud0c0\uc784 \uc544\uc774\ub514 


//SMS\uc778\uc99d\uccb4\ud06c\ud558\uae30
if (m_How.equals("certNew")) { //\uc778\uc99d\uc11c \ubc1c\uae09\uc2dc\uc5d0\ub9cc \uccb4\ud06c\ud558\uc790
	if (is_smsChk) {
		String seq = m_tmid + "_" + m_ID + "_" + request.getRemoteAddr();
		String smsQry = "" ;
		smsQry = smsQry + "select count(x.smsnum) as cnt " ;
		smsQry = smsQry + "from ( " ;
		smsQry = smsQry + "	select a.smsnum " ;
		smsQry = smsQry + "	, rank() over (order by a.crdate desc) AS ranking " ;
		smsQry = smsQry + "	from sms_info a " ;
		smsQry = smsQry + "	where a.userid='"+ m_ID +"' " ;
		smsQry = smsQry + "		and a.userip = '"+ request.getRemoteAddr() +"' " ;
		smsQry = smsQry + "		and a.seq = '"+ seq +"' " ;
		smsQry = smsQry + "	order by a.crdate desc " ;
		smsQry = smsQry + ") x " ;
		smsQry = smsQry + " where x.ranking=1  and x.smsnum='"+ m_sms +"'" ;

		String delQry = "";
		delQry = "delete from sms_info " ;
		delQry = delQry + "	where userid='"+ m_ID +"' " ;
		delQry = delQry + "		and userip = '"+ request.getRemoteAddr() +"' " ;
		delQry = delQry + "		and seq = '"+ seq +"' " ;
		delQry = delQry + "		and smsnum = '"+ m_sms +"' " ;

		Context icsm = new InitialContext();
		DataSource dssm = (DataSource) icsm.lookup("java:comp/env/jdbc/INICA");
		ResultSet rss = null;
		Connection conns = null;
		Statement stmts = null;
		PreparedStatement pstmtsm = null;

		int rsSmsCnt = 0 ;

		try {
			conns = dssm.getConnection();
			stmts = conns.createStatement();

			rss = stmts.executeQuery(smsQry);
			//\uc0ac\uc6a9\uc790\uc544\uc774\ub514\ub85c \uce74\uc6b4\ud2b8\ud558\uc5ec 0\ubcf4\ub2e4 \ud06c\uba74 update 0\uc774\uba74 insert
			while( rss.next() ) {
				rsSmsCnt = rss.getInt("cnt");
			}
			
			if (rsSmsCnt == 0){
				response.setCharacterEncoding("EUC-KR");
				PrintWriter writer = response.getWriter();
				writer.println("<script type='text/javascript'>");
				writer.println("alert('\uc785\ub825\ud558\uc2e0 \uc778\uc99d\ubc88\ud638\ub294 \uc62c\ubc14\ub978 SMS\uc778\uc99d\ubc88\ud638\uac00 \uc544\ub2d9\ub2c8\ub2e4.\\n\ub2e4\uc2dc \ud55c\ubc88 \uc778\uc99d\uc11c \ubc1c\uae09\uc744 \ud558\uc2ed\uc2dc\uc624.');");
				writer.println("location.href='/initech/certcenter64/inica70/ini_certNew2.jsp';");
				writer.println("</script>");
				writer.flush();
				return;


			}else{
				//\uc815\uc0c1\uc801\uc73c\ub85c \uc218\ud589\ud558\uba74 \uae30\uc874 \ub370\uc774\ud130\ub294 \uc0ad\uc81c\ud558\uc790.
				pstmtsm = conns.prepareStatement(delQry);
				pstmtsm.executeUpdate();

				response.setCharacterEncoding("EUC-KR");
				PrintWriter writer = response.getWriter();
				writer.println("<script type='text/javascript'>");
				writer.println("alert('OK');");
				writer.println("</script>");
				writer.flush();
				return;
			}
			
		} catch(Exception e) {
			e.printStackTrace();
		} finally {
			rss.close();
			conns.close();
		}
	}
}













			










  }

  private com.caucho.make.DependencyContainer _caucho_depends
    = new com.caucho.make.DependencyContainer();

  public java.util.ArrayList<com.caucho.vfs.Dependency> _caucho_getDependList()
  {
    return _caucho_depends.getDependencies();
  }

  public void _caucho_addDepend(com.caucho.vfs.PersistentDependency depend)
  {
    super._caucho_addDepend(depend);
    _caucho_depends.add(depend);
  }

  protected void _caucho_setNeverModified(boolean isNotModified)
  {
    _caucho_isNotModified = true;
  }

  public boolean _caucho_isModified()
  {
    if (_caucho_isDead)
      return true;

    if (_caucho_isNotModified)
      return false;

    if (com.caucho.server.util.CauchoSystem.getVersionId() != -1257324557874484737L)
      return true;

    return _caucho_depends.isModified();
  }

  public long _caucho_lastModified()
  {
    return 0;
  }

  public void destroy()
  {
      _caucho_isDead = true;
      super.destroy();
    TagState tagState;
  }

  public void init(com.caucho.vfs.Path appDir)
    throws javax.servlet.ServletException
  {
    com.caucho.vfs.Path resinHome = com.caucho.server.util.CauchoSystem.getResinHome();
    com.caucho.vfs.MergePath mergePath = new com.caucho.vfs.MergePath();
    mergePath.addMergePath(appDir);
    mergePath.addMergePath(resinHome);
    com.caucho.loader.DynamicClassLoader loader;
    loader = (com.caucho.loader.DynamicClassLoader) getClass().getClassLoader();
    String resourcePath = loader.getResourcePathSpecificFirst();
    mergePath.addClassPath(resourcePath);
    com.caucho.vfs.Depend depend;
    depend = new com.caucho.vfs.Depend(appDir.lookup("test.jsp"), 6804417877335753998L, true);
    _caucho_depends.add(depend);
  }

  final static class TagState {

    void release()
    {
    }
  }

  public java.util.HashMap<String,java.lang.reflect.Method> _caucho_getFunctionMap()
  {
    return _jsp_functionMap;
  }

  public void caucho_init(ServletConfig config)
  {
    try {
      com.caucho.server.webapp.WebApp webApp
        = (com.caucho.server.webapp.WebApp) config.getServletContext();
      init(config);
      if (com.caucho.jsp.JspManager.getCheckInterval() >= 0)
        _caucho_depends.setCheckInterval(com.caucho.jsp.JspManager.getCheckInterval());
      _jsp_pageManager = webApp.getJspApplicationContext().getPageManager();
      com.caucho.jsp.TaglibManager manager = webApp.getJspApplicationContext().getTaglibManager();
      com.caucho.jsp.PageContextImpl pageContext = new com.caucho.jsp.InitPageContextImpl(webApp, this);
    } catch (Exception e) {
      throw com.caucho.config.ConfigException.create(e);
    }
  }

  private final static char []_jsp_string0;
  static {
    _jsp_string0 = "\r\n\r\n\r\n\r\n\r\n".toCharArray();
  }
}
